# clasp-3.x option parameter file with optimization options
# F: flag (yes = flag set; no = flag removed)
# S: skip (only to model constraints for the parameters; won't be given to
# clasp)
# :[String]: will not be parsed for clasp (only syntatic sugar for the parameter file)
# :[int]: alignment of complex parameters
# i : integer range
# l : logarithmic transformation (n > 0)
# ---
# --- PREPROCESSING - global options
@0:S:sat-prepro {yes,no}[yes]
@0:sat-prepro {0}[0]
@0:1:sat-prepro [1,50][10]il   # iterations  
@0:2:sat-prepro [1,50][25]il   # cutoff    
@0:3:sat-prepro {-1}[-1]       # timelimit -> non deterministic 
@0:4:sat-prepro [0,100][100]i  # max percent frozen
@0:5:sat-prepro {0,1,2}[1]     # blocked clause elimination
# --- HEURISTICS
@1:heuristic {Berkmin,Vmtf,Vsids,Unit,None}[Vsids]
@1:F:init-moms {yes,no}[no]
@1:sign-def {0,1,2,3}[1]
@1:F:sign-fix {yes,no}[no]
@1:berk-max [1,1024][1]il      # Conditional - heuristic=berkmin
@1:F:berk-huang {yes,no}[no]   # Conditional - heuristic=berkmin
@1:F:berk-once {yes,no}[no]    # Conditional - heuristic=berkmin
@1:vmtf-mtf [1,128][8]il       # Conditional - heuristic=vmtf
@1:vsids-decay [75,99][95]i    # Conditional - heuristic=vsids
@1:save-progress[0,180][180]i   
@1:init-watches {0,1,2}[2]
@1:1:lookahead {atom,body,hybrid,no}[no]  
@1:2:lookahead [1,2147483647][1]il   # Conditional - 1:lookahead != no
@1:rand-freq {0.0,0.01,0.02,0.05,0.1,0.2}[0.0]
# --- RESTARTS
@1:0:restarts {F,L,D,x,+,no}[x]
@1:1:Simp:restarts [1,65535][128]il   # first parameter for all "normal" restarts
@1:1:Dyn:restarts [50,1000][100]il    # first parameter for "dynamic" restarts
@1:S:Luby:aryrestarts {1,2}[1]        # Conditional - restarts=L
@1:2:Luby:restarts [1,65535][1000]il  # Conditional - restarts=L
@1:S:Geo:aryrestarts {2,3}[2]         # Conditional - restarts=x
@1:2:Geo:restarts [1.0,2.0][1.5]      # Conditional - restarts=x
@1:3:Geo:restarts [1,65535][1]il      # Conditional - restarts=x
@1:S:Ari:aryrestarts {2,3}[2]         # Conditional - restarts=+
@1:2:Ari:restarts [1,65535][100]il    # Conditional - restarts=+
@1:3:Ari:restarts [1,65535][1]il      # Conditional - restarts=+
@1:S:Dyn:aryrestarts {2,3}[2]         # Conditional - restarts=D
@1:2:Dyn:restarts [0.5,1.0][0.7]      # Conditional - restarts=D
@1:3:Dyn:restarts [20,127][30]il      # Conditional - restarts=D
@1:F:local-restarts {yes,no}[no]
@1:S:counterCond {yes,no} [yes]    
@1:counter-restarts [1,127][3]il      # Conditional
@1:counter-bump [10,4096][10]il       # Conditional
# --- DELETION
@1:S:deletion {yes,no}[yes]
@1:deletion {no}[no]
@1:1:deletion {basic,sort,ipSort,ipHeap}[basic] # Algorithm
@1:2:deletion [10,100][75]i                     # Fraction to remove
@1:3:deletion {0,1,2}[0]                        # Score function
@1:1:del-init [1.0,50.0][3.0]
@1:2:del-init [10,1023][1000]il
@1:3:del-init [500,32767][9000]i
@1:del-max [32767,2147483647][250000]i
@1:del-on-restart [0,50][0]i
@1:1:del-glue [0,8][2]i
@1:2:del-glue {0,1}[0]
@1:0:del-cfl {F,L,x,+,no}[no]
@1:1:del-cfl [1,65535][128]il         # first schedule arg
@1:2:G:del-cfl [1.0,2.0][1.5]         # second arg if x
@1:2:A:del-cfl [1,65535][100]il       # second arg if +
@1:3:del-cfl [10,65535][10]il         # third arg if x or +
@1:S:del-grow {yes,no}[yes]           # Conditional: enable/disable grow strategy
@1:del-grow {0}[0]
@1:1:del-grow [1.0,5.0][1.1]      
@1:2:del-grow [0.0,100.0][20.0]   
@1:S:growSched {yes,no}[no]
@1:3:del-grow {F,L,x,+}[+]
@1:4:del-grow [1,65535][128]il         # first schedule arg
@1:5:G:del-grow [1.0,2.0][1.5]         # second arg if x
@1:5:A:del-grow [1,65535][100]il       # second arg if +
@1:6:del-grow [10,65535][10]il         # third arg if x or +
# --- MISC    
@1:0:strengthen {local,recursive,no}[local] # Conditional
@1:1:strengthen {0,1,2}[0]
@1:otfs {0,1,2}[2]
@1:update-lbd {0,1,2,3}[0]        
@1:F:update-act {yes,no}[no]      
@1:reverse-arcs {0,1,2,3}[1]
@1:S:contraction {yes,no}[no]
@1:No:contraction {no}[no]
@1:contraction [1,1023][250]il           # Conditional
# --- CONDITIONS/CONSTRAINTS
# sat-prepro
@0:sat-prepro   | @0:S:sat-prepro in {no}
@0:1:sat-prepro | @0:S:sat-prepro in {yes}
@0:2:sat-prepro | @0:S:sat-prepro in {yes}
@0:3:sat-prepro | @0:S:sat-prepro in {yes}
@0:4:sat-prepro | @0:S:sat-prepro in {yes}
@0:5:sat-prepro | @0:S:sat-prepro in {yes}
# heuristic conds
@1:berk-max|@1:heuristic in {Berkmin}
@1:F:berk-huang|@1:heuristic in {Berkmin}
@1:F:berk-once|@1:heuristic in {Berkmin}
@1:vmtf-mtf|@1:heuristic in {Vmtf}
@1:vsids-decay | @1:heuristic in {Vsids}
@1:2:lookahead | @1:1:lookahead in {atom,body,hybrid}
# lookback conds
#... |@1:F:no-lookback in {no}
# restarts conds
@1:1:Simp:restarts | @1:0:restarts in {F,L,x,+} 
@1:S:Luby:aryrestarts | @1:0:restarts in {L}
@1:2:Luby:restarts | @1:0:restarts in {L}
@1:2:Luby:restarts | @1:S:Luby:aryrestarts in {2}
@1:S:Geo:aryrestarts | @1:0:restarts in {x}
@1:2:Geo:restarts | @1:0:restarts in {x}
@1:3:Geo:restarts | @1:0:restarts in {x}
@1:3:Geo:restarts | @1:S:Geo:aryrestarts in {3}
@1:S:Ari:aryrestarts | @1:0:restarts in {+}
@1:2:Ari:restarts | @1:0:restarts in {+}
@1:3:Ari:restarts | @1:0:restarts in {+}
@1:3:Ari:restarts | @1:S:Ari:aryrestarts in {3}
# dynamic restarts
@1:1:Dyn:restarts    | @1:0:restarts in {D}
@1:S:Dyn:aryrestarts | @1:0:restarts in {D}
@1:2:Dyn:restarts    | @1:0:restarts in {D}
@1:3:Dyn:restarts    | @1:0:restarts in {D}
@1:counter-restarts | @1:S:counterCond in {yes}
@1:counter-bump | @1:S:counterCond in {yes}
@1:counter-restarts | @1:0:restarts in {F,D,L,x,+}
@1:counter-bump | @1:0:restarts in {F,D,L,x,+}
# deletion
@1:deletion       | @1:S:deletion in {no}
@1:1:deletion     | @1:S:deletion in {yes}
@1:2:deletion     | @1:S:deletion in {yes}
@1:3:deletion     | @1:S:deletion in {yes}
@1:1:del-init     | @1:S:deletion in {yes}
@1:2:del-init     | @1:S:deletion in {yes}
@1:3:del-init     | @1:S:deletion in {yes}
@1:del-max        | @1:S:deletion in {yes}
@1:del-on-restart | @1:S:deletion in {yes}
@1:1:del-glue     | @1:S:deletion in {yes}
@1:2:del-glue     | @1:S:deletion in {yes}
@1:0:del-cfl      | @1:S:deletion in {yes}
@1:1:del-cfl      | @1:0:del-cfl in {F,L,x,+}
@1:2:G:del-cfl    | @1:0:del-cfl in {x}
@1:2:A:del-cfl    | @1:0:del-cfl in {+}
@1:3:del-cfl      | @1:0:del-cfl in {x,+}
@1:del-grow       | @1:S:del-grow in {no}
@1:1:del-grow     | @1:S:del-grow in {yes}
@1:2:del-grow     | @1:S:del-grow in {yes}
@1:S:growSched    | @1:S:del-grow in {yes}
@1:3:del-grow     | @1:S:growSched in {yes}
@1:4:del-grow     | @1:S:growSched in {yes}
@1:5:G:del-grow   | @1:3:del-grow in {x}
@1:5:A:del-grow   | @1:3:del-grow in {+}
@1:6:del-grow     | @1:3:del-grow in {x,+}
{@1:S:deletion=yes, @1:0:del-cfl=no, @1:S:del-grow=no}
{@1:S:deletion=no, @1:S:del-grow=yes}
# misc
@1:1:strengthen | @1:0:strengthen in {local,recursive}
@1:contraction | @1:S:contraction in {yes}
@1:No:contraction | @1:S:contraction in {no}
